language: php
dist: trusty
sudo: required
cache:
  directories:
    - vendor/
php:
  - 7.0
services:
  - mongodb
  - docker
addons:
  apt:
    packages:
    - nginx
    - uuid-runtime
  hosts:
    - localhost
    - gandalf.dev
env:
  global:
    - DOCKER_HUB_ACCOUNT=nebo15
    - MAIN_BRANCHES="master develop staging"
    - RELEASE_BRANCH="master"
    - TZ=Europe/Kiev
    - secure: "...."
before_script:
  # Our Nginx config uses /www/gandalf.api path. Preserve it on CI
  - sudo mkdir -p /www
  - sudo ln -s $PWD /www/gandalf.api
  - sudo adduser www-data travis
  # Install and configure nginx
  - ./.travis/scripts/install_nginx.sh
  # Install and configure PHP
  - ./.travis/scripts/install_php.sh
  # Disable XDebug
  - phpenv config-rm xdebug.ini
  # Configure file paths and application environment
  - touch storage/logs/lumen.log
  - sudo chmod 777 -Rf storage/ public/dump/
  - cp ./.env.example ./.env
  # Install dependencies
  - composer install --prefer-source
  # Start PHP-FPM
  - sudo ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
  # Restart nginx
  - sudo service nginx restart
script:
  # Increment version
  - ./bin/version-increment.sh
  # Run tests
  - vendor/bin/codecept run
  - vendor/bin/phpcs ./app --standard=PSR2 --warning-severity=0
  # Run Docker container
  - sudo ./bin/build.sh
  - sudo ./bin/start.sh
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
  - if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "1" ]; then echo "[E] Container is not started!" && false; fi;
  # Send request to the container
  - curl http://gandalf-docker.dev:8080/ -v
after_failure:
  - ls -l /etc/nginx
  - ls -l /etc/nginx/sites-enabled
  - echo $PWD
  - ls -l ./
  - ls -l ../
  - ls -l /www
  - cat /etc/nginx/sites-enabled/*
  - cat /etc/nginx/nginx.conf
  - cat /var/log/www/*.log;
  - cat /var/log/php-fpm.log;
  - cat $PWD/storage/logs/lumen.log;
  - cat $PWD/tests/_output/*
  - docker logs gandalf.api --details --since 5h
after_success:
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with a changelog
#  - ./bin/ci/push.sh