{
  "swagger": "2.0",
  "info": {
    "title": "Gandalf API",
    "description": "`Gandalf` is a **Open-Source** Decision Engine for Big-Data. \n\nYou can find source code on our [GitHub account](https://github.com/Nebo15/gandalf.api/). Itâ€™s build on top of PHP Lumen framework and MongoDB.",
    "version": "1.0.0"
  },
  "host": "gandalf-api.nebo15.com",
  "schemes": [
    "http"
  ],
  "basePath": "/api/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin/tables": {
      "get": {
        "summary": "Tables list",
        "description": "Get list of Tables\n",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "description": "An array of Tables",
            "schema": {
              "type": "object",
              "required": [
                "meta",
                "data"
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta",
                  "description": "Meta data"
                },
                "data": {
                  "type": "array",
                  "description": "Response data object",
                  "items": {
                    "$ref": "#/definitions/TableList"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Table",
        "description": "Create a new Table",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "description": "Created Table",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Table"
              }
            }
          }
        }
      }
    },
    "/admin/tables/{id}": {
      "get": {
        "summary": "Read Table",
        "description": "Get Table by id",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "description": "Table object",
            "schema": {
              "type": "object",
              "required": [
                "meta",
                "data"
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta",
                  "description": "Meta data"
                },
                "data": {
                  "$ref": "#/definitions/Table",
                  "description": "Response data object"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Table",
        "description": "Update Table by id",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "description": "Table object",
            "schema": {
              "type": "object",
              "required": [
                "meta",
                "data"
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta",
                  "description": "Meta data"
                },
                "data": {
                  "$ref": "#/definitions/Table",
                  "description": "Response data object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Table",
        "description": "Delete Table by id",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "required": [
                "meta"
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta",
                  "description": "Meta data"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tables/{id}/copy": {
      "post": {
        "summary": "Copy Table",
        "description": "Create new Table from existing Table by id",
        "tags": [
          "Tables"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "required": [
                "meta"
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta",
                  "description": "Meta data"
                },
                "data": {
                  "$ref": "#/definitions/Table",
                  "description": "Response data object"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Meta": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "HTTP response code",
          "example": 200
        }
      }
    },
    "TableList": {
      "type": "object",
      "description": "Short view of Table for list",
      "required": [
        "_id",
        "title",
        "description",
        "matching_type",
        "default_decision"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier representing a specific Table. MongoID",
          "example": "56c31536a60ad644060041af"
        },
        "title": {
          "type": "string",
          "description": "Title of Table.",
          "example": "Some title"
        },
        "description": {
          "type": "string",
          "description": "Description of Table.",
          "example": "Some description"
        },
        "matching_type": {
          "type": "string",
          "description": "Matching type for Table.",
          "example": "first",
          "enum": [
            "first",
            "all"
          ]
        },
        "default_decision": {
          "type": "string",
          "description": "If there are no rows with all validations passed, this decision will be set for Decision.",
          "example": "Decline"
        }
      }
    },
    "Table": {
      "type": "object",
      "description": "It consist of columns that describes API request structure, rows that describe decision-making logic, and cells that represents a single validation rule.",
      "required": [
        "_id",
        "title",
        "description",
        "matching_type",
        "default_decision",
        "default_title",
        "default_description",
        "rules",
        "fields"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier representing a specific Table. MongoID",
          "example": "56c31536a60ad644060041af"
        },
        "title": {
          "type": "string",
          "description": "Title of Table.",
          "example": "Some title"
        },
        "description": {
          "type": "string",
          "description": "Description of Table.",
          "example": "Some description"
        },
        "matching_type": {
          "type": "string",
          "description": "Matching type for Table.",
          "example": "first",
          "enum": [
            "first",
            "all"
          ]
        },
        "default_decision": {
          "type": "string",
          "description": "If there are no rows with all validations passed, this decision will be set for Decision.",
          "example": "Decline"
        },
        "default_title": {
          "type": "string",
          "description": "If there are no rows with all validations passed, this title will be set for Decision.",
          "example": "Default title"
        },
        "default_description": {
          "type": "string",
          "description": "If there are no rows with all validations passed, this description will be set for Decision.",
          "example": "Default description"
        },
        "fields": {
          "type": "array",
          "description": "Array of Field objects.",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "rules": {
          "type": "array",
          "description": "Array of Rule objects.",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        }
      }
    },
    "Field": {
      "type": "object",
      "required": [
        "key",
        "title",
        "source",
        "type"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "API Field for request",
          "example": "salary"
        },
        "title": {
          "type": "string",
          "description": "Field title",
          "example": "Field title"
        },
        "source": {
          "type": "string",
          "description": "Source type.",
          "example": "request",
          "enum": [
            "request"
          ]
        },
        "type": {
          "type": "string",
          "description": "Available field data types",
          "example": "string",
          "enum": [
            "numeric",
            "boolean",
            "string"
          ]
        },
        "preset": {
          "description": "Preset object. You can modify field value for table rows by adding field preset.",
          "$ref": "#/definitions/Preset"
        }
      }
    },
    "Preset": {
      "type": "object",
      "required": [
        "condition",
        "value"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "description": "Available rules",
          "example": "$gte",
          "enum": [
            "$is_set",
            "$eq",
            "$ne",
            "$gt",
            "$gte",
            "$lt",
            "$lte",
            "$in",
            "$nin"
          ]
        },
        "value": {
          "type": "string|numeric|boolean",
          "description": "Value type can be different depends on condition",
          "example": 1000
        }
      }
    },
    "Rule": {
      "type": "object",
      "required": [
        "than",
        "title",
        "description",
        "conditions"
      ],
      "properties": {
        "than": {
          "type": "string",
          "description": "Decision, when this rule is matched",
          "example": "Approve"
        },
        "title": {
          "type": "string",
          "description": "Rule title.",
          "example": "Rule title."
        },
        "description": {
          "type": "string",
          "description": "Rule description.",
          "example": "Rule description."
        },
        "conditions": {
          "type": "array",
          "description": "Array of Condition objects",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        }
      }
    },
    "Condition": {
      "type": "object",
      "required": [
        "field_key",
        "condition",
        "value"
      ],
      "properties": {
        "field_key": {
          "type": "string",
          "description": "Key for API field key.",
          "example": "salary"
        },
        "condition": {
          "type": "string",
          "description": "Condition",
          "example": "$eq",
          "enum": [
            "$is_set",
            "$eq",
            "$ne",
            "$gt",
            "$gte",
            "$lt",
            "$lte",
            "$in",
            "$nin"
          ]
        },
        "value": {
          "type": "string|numeric|boolean",
          "description": "Value type can be different depends on condition",
          "example": 1000
        }
      }
    },
    "Decision":{
      "type": "object",
      "properties": {
        "_id",
        "request",
        "table",
        "title",
        "description",
        "fields",
        "rules",
        "default_decision",
        "final_decision",
        "created_at": {

        },
        "updated_at":{

        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}